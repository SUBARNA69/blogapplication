@model blogapplication.Models.KycDetail

@{
    ViewData["Title"] = "KYC Review - " + Model.User.Name;
    Layout = "_Layout";

    var statusClass = Model.Status switch
    {
        "Verified" => "bg-green-100 text-green-800 border-green-200",
        "Pending" => "bg-yellow-100 text-yellow-800 border-yellow-200",
        "Rejected" => "bg-red-100 text-red-800 border-red-200",
        _ => "bg-gray-100 text-gray-800 border-gray-200"
    };

    var headerColor = Model.Status switch
    {
        "Verified" => "from-green-500 to-emerald-600",
        "Pending" => "from-yellow-500 to-orange-600",
        "Rejected" => "from-red-500 to-pink-600",
        _ => "from-gray-500 to-slate-600"
    };
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
        <!-- Header -->
        <div class="mb-8">
            <div class="flex items-center space-x-4 mb-4">
                <a href="@Url.Action("ManageKyc")" class="text-blue-600 hover:text-blue-800">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                    </svg>
                </a>
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">KYC Review</h1>
                    <p class="text-gray-600">Review identity verification for @Model.User.Name</p>
                </div>
            </div>
        </div>

        <!-- Alert Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mb-6 p-4 bg-green-100 border border-green-400 text-green-700 rounded-lg">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="mb-6 p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="grid lg:grid-cols-3 gap-8">
            <!-- User Information & Status -->
            <div class="lg:col-span-1 space-y-6">
                <!-- User Info Card -->
                <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                    <div class="bg-gradient-to-r @headerColor px-6 py-4">
                        <h2 class="text-xl font-bold text-white">User Information</h2>
                    </div>
                    <div class="p-6 space-y-4">
                        <div>
                            <label class="text-sm font-medium text-gray-500">Name</label>
                            <p class="text-gray-900 font-medium">@Model.User.Name</p>
                        </div>
                        <div>
                            <label class="text-sm font-medium text-gray-500">Email</label>
                            <p class="text-gray-900 font-medium">@Model.User.Email</p>
                        </div>
                        <div>
                            <label class="text-sm font-medium text-gray-500">User ID</label>
                            <p class="text-gray-900 font-medium">@Model.UserId</p>
                        </div>
                        <div>
                            <label class="text-sm font-medium text-gray-500">Account Created</label>
                            <p class="text-gray-900 font-medium">@Model.User.CreatedAt.ToString("MMM dd, yyyy")</p>
                        </div>
                    </div>
                </div>

                <!-- Status Card -->
                <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                    <div class="bg-gradient-to-r @headerColor px-6 py-4">
                        <h2 class="text-xl font-bold text-white">KYC Status</h2>
                    </div>
                    <div class="p-6 space-y-4">
                        <div>
                            <label class="text-sm font-medium text-gray-500">Current Status</label>
                            <div class="mt-1">
                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium @statusClass">
                                    @Model.Status
                                </span>
                            </div>
                        </div>
                        <div>
                            <label class="text-sm font-medium text-gray-500">Submitted</label>
                            <p class="text-gray-900 font-medium">@Model.SubmittedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</p>
                        </div>
                        <div>
                            <label class="text-sm font-medium text-gray-500">Processing Time</label>
                            <p class="text-gray-900 font-medium">
                                @{
                                    var daysSince = (DateTime.UtcNow - Model.SubmittedAt).Days;
                                }
                                @daysSince day@(daysSince != 1 ? "s" : "")
                            </p>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                @if (Model.Status != "Verified")
                {
                    <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                        <div class="bg-gradient-to-r from-blue-500 to-purple-600 px-6 py-4">
                            <h2 class="text-xl font-bold text-white">Actions</h2>
                        </div>
                        <div class="p-6 space-y-4">
                            <!-- Approve Form -->
                            <form method="post" asp-action="ApproveKyc" asp-route-id="@Model.Id">
                                @Html.AntiForgeryToken()
                                <div class="space-y-3">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Extracted Name (Optional)</label>
                                        <input type="text" name="extractedName" value="@Model.ExtractedName"
                                               class="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">ID Number (Optional)</label>
                                        <input type="text" name="extractedCitizenshipNumber" value="@Model.ExtractedCitizenshipNumber"
                                               class="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500">
                                    </div>
                                    <button type="submit"
                                            class="w-full bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium"
                                            onclick="return confirm('Are you sure you want to approve this KYC submission?')">
                                        ✅ Approve KYC
                                    </button>
                                </div>
                            </form>

                            <!-- Reject Form -->
                            <form method="post" asp-action="RejectKyc" asp-route-id="@Model.Id">
                                @Html.AntiForgeryToken()
                                <div class="space-y-3">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Rejection Reason *</label>
                                        <textarea name="rejectionReason" required rows="3"
                                              class="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                                              placeholder="Please provide a clear reason for rejection...">@(Model.Status == "Rejected" ? Model.AdminComment : "")</textarea>
                                    </div>
                                    <button type="submit"
                                            class="w-full bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium"
                                            onclick="return confirm('Are you sure you want to reject this KYC submission?')">
                                        ❌ Reject KYC
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                }
            </div>

            <!-- Documents Review -->
            <div class="lg:col-span-2 space-y-6">
                <!-- ID Document -->
                <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-500 to-purple-600 px-6 py-4">
                        <h2 class="text-xl font-bold text-white">ID Document</h2>
                        <p class="text-white text-opacity-90 text-sm">Review the submitted identification document</p>
                    </div>
                    <div class="p-6">
                        <div class="border-2 border-gray-200 rounded-lg overflow-hidden mb-4">
                            <img src="~/@Model.IdCardImagePath"
                                 alt="ID Document"
                                 class="w-full h-auto cursor-pointer hover:scale-105 transition-transform duration-200"
                                 onclick="viewDocument('@Model.IdCardImagePath', 'ID Document')">
                        </div>
                        <div class="flex justify-between items-center">
                            <p class="text-sm text-gray-600">@Model.IdCardImagePath</p>
                            <button onclick="viewDocument('@Model.IdCardImagePath', 'ID Document')"
                                    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium">
                                View Full Size
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Face Photo -->
                <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                    <div class="bg-gradient-to-r from-purple-500 to-pink-600 px-6 py-4">
                        <h2 class="text-xl font-bold text-white">Face Photo</h2>
                        <p class="text-white text-opacity-90 text-sm">Review the submitted selfie/face photo</p>
                    </div>
                    <div class="p-6">
                        <div class="border-2 border-gray-200 rounded-lg overflow-hidden mb-4">
                            <img src="~/@Model.FaceImagePath"
                                 alt="Face Photo"
                                 class="w-full h-auto cursor-pointer hover:scale-105 transition-transform duration-200"
                                 onclick="viewDocument('@Model.FaceImagePath', 'Face Photo')">
                        </div>
                        <div class="flex justify-between items-center">
                            <p class="text-sm text-gray-600">@Model.FaceImagePath</p>
                            <button onclick="viewDocument('@Model.FaceImagePath', 'Face Photo')"
                                    class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg text-sm font-medium">
                                View Full Size
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Extracted Information -->
                <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                    <div class="bg-gradient-to-r from-indigo-500 to-blue-600 px-6 py-4">
                        <h2 class="text-xl font-bold text-white">Extracted Information</h2>
                        <p class="text-white text-opacity-90 text-sm">Information extracted from documents</p>
                    </div>
                    <div class="p-6">
                        <div class="grid md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-500 mb-1">Extracted Name</label>
                                <p class="text-gray-900 font-medium">
                                    @(!string.IsNullOrEmpty(Model.ExtractedName) ? Model.ExtractedName : "Not available")
                                </p>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-500 mb-1">ID/Citizenship Number</label>
                                <p class="text-gray-900 font-medium">
                                    @(!string.IsNullOrEmpty(Model.ExtractedCitizenshipNumber) ? Model.ExtractedCitizenshipNumber : "Not available")
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Admin Comments -->
                @if (!string.IsNullOrEmpty(Model.AdminComment))
                {
                    <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                        <div class="bg-gradient-to-r from-gray-500 to-gray-600 px-6 py-4">
                            <h2 class="text-xl font-bold text-white">Admin Comments</h2>
                        </div>
                        <div class="p-6">
                            <div class="bg-gray-50 rounded-lg p-4">
                                <p class="text-gray-700">@Model.AdminComment</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Document Viewer Modal -->
<div id="documentModal" class="fixed inset-0 bg-black bg-opacity-75 hidden z-50 flex items-center justify-center p-4">
    <div class="bg-white rounded-lg max-w-6xl max-h-full overflow-auto">
        <div class="flex items-center justify-between p-4 border-b">
            <h3 id="modalTitle" class="text-lg font-semibold text-gray-900"></h3>
            <button onclick="closeDocumentModal()" class="text-gray-500 hover:text-gray-700">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
        <div class="p-4">
            <img id="modalImage" src="/placeholder.svg" alt="" class="max-w-full h-auto">
        </div>
    </div>
</div>

<script>
    function viewDocument(imagePath, title) {
        document.getElementById('modalTitle').textContent = title;
        document.getElementById('modalImage').src = '@Url.Content("~/")' + imagePath;
        document.getElementById('documentModal').classList.remove('hidden');
    }

    function closeDocumentModal() {
        document.getElementById('documentModal').classList.add('hidden');
    }

    // Close modal when clicking outside
    document.getElementById('documentModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeDocumentModal();
        }
    });

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeDocumentModal();
        }
    });
</script>

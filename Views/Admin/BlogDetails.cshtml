@model blogapplication.Models.Blog

@{
    Layout = "_Layout"; // Use the admin layout
    ViewData["Title"] = $"Blog Details - {Model.Title}";
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Navigation -->
        <div class="mb-6">
            <a asp-action="ManageBlogs" class="inline-flex items-center text-sm font-medium text-gray-600 hover:text-blue-600 transition-colors duration-200">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to manage blogs
            </a>
        </div>

        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-md mb-6">
                <div class="flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    @TempData["SuccessMessage"]
                </div>
            </div>
        }

        <!-- Blog Post -->
        <article class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden mb-8">
            <!-- Admin Header -->
            <div class="bg-yellow-50 border-b border-yellow-200 p-4">
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <svg class="w-5 h-5 text-yellow-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                        </svg>
                        <span class="text-sm font-medium text-yellow-800">Admin View</span>
                    </div>
                    <div class="flex items-center space-x-3">
                        <form asp-action="DeleteBlog" asp-route-id="@Model.Id" method="post" class="inline"
                              onsubmit="return confirm('Are you sure you want to delete this blog post? This action cannot be undone.')">
                            @Html.AntiForgeryToken()
                            <button type="submit"
                                    class="inline-flex items-center px-3 py-1 text-sm font-medium text-red-600 bg-red-50 hover:bg-red-100 rounded-md transition-colors duration-200">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                                Delete
                            </button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Blog Header -->
            <div class="p-6 border-b border-gray-200">
                <h1 class="text-3xl font-bold text-gray-900 mb-4">@Model.Title</h1>

                <div class="flex items-center justify-between flex-wrap gap-4">
                    <!-- Author and Date -->
                    <div class="flex items-center">
                        <div class="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center mr-3 text-white font-medium">
                            @(Model.User?.Name?.Substring(0, 1).ToUpper() ?? "U")
                        </div>
                        <div>
                            <p class="font-medium text-gray-900">@(Model.User?.Name ?? "Unknown Author")</p>
                            <div class="flex items-center text-sm text-gray-500">
                                <time datetime="@Model.CreatedAt.ToString("yyyy-MM-dd")">
                                    @Model.CreatedAt.ToString("MMMM dd, yyyy")
                                </time>
                                @if (Model.UpdatedAt.HasValue)
                                {
                                    <span class="mx-2">•</span>
                                    <span>Updated on @Model.UpdatedAt.Value.ToString("MMM dd, yyyy")</span>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Blog Stats -->
                    <div class="flex items-center space-x-4 text-sm text-gray-500">
                        <div class="flex items-center">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                            </svg>
                            <span>@Model.Comments.Count comments</span>
                        </div>
                        <div class="flex items-center">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                            </svg>
                            <span>ID: @Model.Id</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Featured Image -->
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <div class="w-full border-b border-gray-200">
                    <img src="@Model.Image" alt="@Model.Title" class="w-full h-auto max-h-96 object-cover" />
                </div>
            }

            <!-- Blog Content -->
            <div class="p-6 prose max-w-none">
                @{
                    var formattedContent = Model.Content.Replace(Environment.NewLine, "<br />");
                }
                @Html.Raw(formattedContent)
            </div>
        </article>

        <!-- Comments Management -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-bold text-gray-900 flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                    </svg>
                    Comments Management (@Model.Comments.Count)
                </h2>
            </div>

            <div class="divide-y divide-gray-200">
                @if (Model.Comments.Any())
                {
                    foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                    {
                        <div class="p-6 hover:bg-gray-50 transition-colors duration-200">
                            <div class="flex items-start justify-between">
                                <div class="flex items-start space-x-4 flex-1">
                                    <div class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                                        <span class="text-xs font-medium text-gray-600">
                                            @(comment.User?.Name?.Substring(0, 1).ToUpper() ?? "U")
                                        </span>
                                    </div>
                                    <div class="flex-1 min-w-0">
                                        <div class="flex items-center justify-between mb-2">
                                            <div>
                                                <h3 class="text-sm font-medium text-gray-900">@(comment.User?.Name ?? "Unknown User")</h3>
                                                <p class="text-xs text-gray-500">
                                                    <time datetime="@comment.CreatedAt.ToString("yyyy-MM-dd")">
                                                        @comment.CreatedAt.ToString("MMM dd, yyyy • h:mm tt")
                                                    </time>
                                                    • Comment ID: @comment.Id
                                                </p>
                                            </div>
                                        </div>
                                        <div class="text-sm text-gray-700 whitespace-pre-line">
                                            @comment.Content
                                        </div>
                                    </div>
                                </div>
                                <div class="ml-4">
                                    <form asp-action="DeleteComment" asp-route-id="@comment.Id" method="post" class="inline"
                                          onsubmit="return confirm('Are you sure you want to delete this comment?')">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                        <button type="submit"
                                                class="text-red-600 hover:text-red-800 p-2 rounded-md hover:bg-red-50 transition-colors duration-200"
                                                title="Delete comment">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                            </svg>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="p-8 text-center">
                        <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                        </svg>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">No comments</h3>
                        <p class="text-gray-600">This blog post doesn't have any comments yet.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .prose {
        line-height: 1.75;
        color: #374151;
    }

        .prose p {
            margin-bottom: 1.25em;
        }

        .prose h1, .prose h2, .prose h3, .prose h4 {
            color: #111827;
            font-weight: 600;
            margin-top: 2em;
            margin-bottom: 1em;
        }
</style>
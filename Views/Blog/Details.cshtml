@model blogapplication.Models.Blog

@{
    Layout = "_Layout";
    ViewData["Title"] = Model.Title;
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-md mb-6">
                <div class="flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    @TempData["SuccessMessage"]
                </div>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md mb-6">
                <div class="flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                    </svg>
                    @TempData["ErrorMessage"]
                </div>
            </div>
        }

        <!-- Navigation -->
        <div class="mb-6">
            <a asp-action="Index" class="inline-flex items-center text-sm font-medium text-gray-600 hover:text-blue-600 transition-colors duration-200">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to all blogs
            </a>
        </div>

        <!-- Blog Post -->
        <article class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden mb-8">
            <!-- Blog Header -->
            <div class="p-6 border-b border-gray-200">
                <h1 class="text-3xl font-bold text-gray-900 mb-4">@Model.Title</h1>

                <div class="flex items-center justify-between flex-wrap gap-4">
                    <!-- Author and Date -->
                    <div class="flex items-center">
                        <div class="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center mr-3 text-white font-medium">
                            @(Model.User?.Name?.Substring(0, 1).ToUpper() ?? "U")
                        </div>
                        <div>
                            <p class="font-medium text-gray-900">@(Model.User?.Name ?? "Unknown Author")</p>
                            <div class="flex items-center text-sm text-gray-500">
                                <time datetime="@Model.CreatedAt.ToString("yyyy-MM-dd")">
                                    @Model.CreatedAt.ToString("MMMM dd, yyyy")
                                </time>
                                @if (Model.UpdatedAt.HasValue)
                                {
                                    <span class="mx-2">•</span>
                                    <span>Updated on @Model.UpdatedAt.Value.ToString("MMM dd, yyyy")</span>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    @if (User.Identity.IsAuthenticated)
                    {
                        var currentUserId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0");
                        if (Model.UserId == currentUserId || User.IsInRole("Admin"))
                        {
                            <div class="flex items-center space-x-3">
                                <a asp-action="Edit" asp-route-id="@Model.Id"
                                   class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50 hover:bg-blue-100 rounded-md transition-colors duration-200">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                    </svg>
                                    Edit Post
                                </a>
                                <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="inline"
                                      onsubmit="return confirm('Are you sure you want to delete this blog post? This action cannot be undone.')">
                                    @Html.AntiForgeryToken()
                                    <button type="submit"
                                            class="inline-flex items-center px-4 py-2 text-sm font-medium text-red-600 bg-red-50 hover:bg-red-100 rounded-md transition-colors duration-200">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                        Delete Post
                                    </button>
                                </form>
                            </div>
                        }
                    }
                </div>
            </div>

            <!-- Featured Image -->
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <div class="w-full border-b border-gray-200">
                    <img src="@Model.Image" alt="@Model.Title" class="w-full h-auto max-h-96 object-cover" />
                </div>
            }

            <!-- Blog Content -->
            <div class="p-6 prose max-w-none">
                @{
                    // Convert line breaks to <br> tags for better readability
                    var formattedContent = Model.Content.Replace(Environment.NewLine, "<br />");
                }
                @Html.Raw(formattedContent)
            </div>
        </article>

        <!-- Comments Section -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-bold text-gray-900 flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                    </svg>
                    Comments (@Model.Comments.Count)
                </h2>
            </div>

            <!-- Comments List -->
            <div class="divide-y divide-gray-200">
                @if (Model.Comments.Any())
                {
                    foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                    {
                        <div class="p-6 hover:bg-gray-50 transition-colors duration-200">
                            <div class="flex items-start space-x-4">
                                <!-- Comment Author Avatar -->
                                <div class="flex-shrink-0">
                                    <div class="w-10 h-10 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center shadow-sm">
                                        <span class="text-sm font-medium text-white">
                                            @(comment.User?.Name?.Substring(0, 1).ToUpper() ?? "U")
                                        </span>
                                    </div>
                                </div>

                                <!-- Comment Content -->
                                <div class="flex-1 min-w-0">
                                    <div class="flex items-center justify-between mb-2">
                                        <div>
                                            <h3 class="text-sm font-medium text-gray-900">@(comment.User?.Name ?? "Unknown User")</h3>
                                            <p class="text-xs text-gray-500 flex items-center">
                                                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                </svg>
                                                <time datetime="@comment.CreatedAt.ToString("yyyy-MM-dd")">
                                                    @comment.CreatedAt.ToString("MMM dd, yyyy • h:mm tt")
                                                </time>
                                            </p>
                                        </div>

                                        <!-- Comment Actions -->
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            var currentUserId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0");
                                            if (comment.UserId == currentUserId || User.IsInRole("Admin"))
                                            {
                                                <div class="flex items-center space-x-1">
                                                    <!-- Edit Comment Button -->
                                                    <a asp-controller="Comment" asp-action="Edit" asp-route-id="@comment.Id"
                                                       class="inline-flex items-center p-2 text-xs font-medium text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-md transition-colors duration-200"
                                                       title="Edit comment">
                                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                                        </svg>
                                                    </a>

                                                    <!-- Delete Comment Button -->
                                                    <form asp-controller="Comment" asp-action="Delete" asp-route-id="@comment.Id" method="post" class="inline"
                                                          onsubmit="return confirm('Are you sure you want to delete this comment? This action cannot be undone.')">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="blogId" value="@Model.Id" />
                                                        <button type="submit"
                                                                class="inline-flex items-center p-2 text-xs font-medium text-red-600 hover:text-red-800 hover:bg-red-50 rounded-md transition-colors duration-200"
                                                                title="Delete comment">
                                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                            </svg>
                                                        </button>
                                                    </form>
                                                </div>
                                            }
                                        }
                                    </div>

                                    <!-- Comment Text -->
                                    <div class="text-sm text-gray-700 whitespace-pre-line leading-relaxed">
                                        @comment.Content
                                    </div>

                                    <!-- Comment Metadata -->
                                    <div class="mt-3 flex items-center text-xs text-gray-400">
                                        @if (comment.UserId == Model.UserId)
                                        {
                                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 mr-2">
                                                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                                </svg>
                                                Author
                                            </span>
                                        }
                                        <span>Comment #{@comment.Id}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="p-8 text-center">
                        <div class="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
                            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                            </svg>
                        </div>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">No comments yet</h3>
                        <p class="text-gray-500 mb-4">Be the first to share your thoughts about this post!</p>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button onclick="document.getElementById('comment-form').scrollIntoView({behavior: 'smooth'})"
                                    class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50 hover:bg-blue-100 rounded-md transition-colors duration-200">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                                </svg>
                                Write the first comment
                            </button>
                        }
                    </div>
                }
            </div>

            <!-- Add Comment Form -->
            @if (User.Identity.IsAuthenticated)
            {
                <div id="comment-form" class="p-6 bg-gray-50 border-t border-gray-200">
                    <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
                        </svg>
                        Leave a Comment
                    </h3>
                    <form asp-controller="Comment" asp-action="Create" method="post" class="space-y-4">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="BlogId" value="@Model.Id" />

                        <div>
                            <label for="content" class="sr-only">Comment</label>
                            <textarea id="content" name="Content" rows="4" required maxlength="1000"
                                  class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 resize-none"
                                  placeholder="Share your thoughts about this post..."
                                  oninput="updateCharCount(this)"></textarea>
                            <div class="flex justify-between items-center mt-2">
                                <p class="text-xs text-gray-500">Be respectful and constructive in your comments.</p>
                                <span id="char-count" class="text-xs text-gray-400">0/1000</span>
                            </div>
                        </div>

                        <div class="flex justify-end">
                            <button type="submit"
                                    class="inline-flex items-center px-6 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 shadow-sm">
                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                                </svg>
                                Post Comment
                            </button>
                        </div>
                    </form>
                </div>
            }
            else
            {
                <div class="p-6 bg-gray-50 border-t border-gray-200 text-center">
                    <div class="w-12 h-12 mx-auto mb-3 bg-blue-100 rounded-full flex items-center justify-center">
                        <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900 mb-2">Join the conversation</h3>
                    <p class="text-gray-600 mb-4">You need to be logged in to leave a comment.</p>
                    <div class="flex items-center justify-center space-x-3">
                        <a asp-controller="User" asp-action="Login" asp-route-returnUrl="@Context.Request.Path"
                           class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200">
                            Log in to comment
                        </a>
                        <a asp-controller="User" asp-action="Register" asp-route-returnUrl="@Context.Request.Path"
                           class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200">
                            Sign up
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    /* Basic styling for blog content */
    .prose {
        line-height: 1.75;
        color: #374151;
    }

        .prose p {
            margin-bottom: 1.25em;
        }

        .prose h1, .prose h2, .prose h3, .prose h4 {
            color: #111827;
            font-weight: 600;
            margin-top: 2em;
            margin-bottom: 1em;
        }

        .prose h1 {
            font-size: 2.25em;
        }

        .prose h2 {
            font-size: 1.5em;
        }

        .prose h3 {
            font-size: 1.25em;
        }

        .prose ul, .prose ol {
            margin-top: 1.25em;
            margin-bottom: 1.25em;
            padding-left: 1.625em;
        }

        .prose ul {
            list-style-type: disc;
        }

        .prose ol {
            list-style-type: decimal;
        }

        .prose a {
            color: #2563eb;
            text-decoration: underline;
        }

    .whitespace-pre-line {
        white-space: pre-line;
    }
</style>

<script>
    function updateCharCount(textarea) {
        const charCount = document.getElementById('char-count');
        const currentLength = textarea.value.length;
        const maxLength = 1000;

        charCount.textContent = `${currentLength}/${maxLength}`;

        if (currentLength > maxLength * 0.9) {
            charCount.classList.add('text-red-500');
            charCount.classList.remove('text-gray-400');
        } else {
            charCount.classList.add('text-gray-400');
            charCount.classList.remove('text-red-500');
        }
    }

    // Auto-resize textarea
    document.addEventListener('DOMContentLoaded', function() {
        const textarea = document.getElementById('content');
        if (textarea) {
            textarea.addEventListener('input', function() {
                this.style.height = 'auto';
                this.style.height = this.scrollHeight + 'px';
            });
        }
    });
</script>
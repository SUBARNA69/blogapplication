@model blogapplication.Models.KycDetail

@{
    ViewData["Title"] = "KYC Status";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var statusClass = Model.Status switch
    {
        "Verified" => "bg-green-100 text-green-800 border-green-200",
        "Half-Verified" => "bg-blue-100 text-blue-800 border-blue-200",
        "Pending" => "bg-yellow-100 text-yellow-800 border-yellow-200",
        "Rejected" => "bg-red-100 text-red-800 border-red-200",
        _ => "bg-gray-100 text-gray-800 border-gray-200"
    };

    var statusIcon = Model.Status switch
    {
        "Verified" => "M5 13l4 4L19 7",
        "Half-Verified" => "M12 6v6h4.5m-6.75 7.5h4.5",
        "Pending" => "M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z",
        "Rejected" => "M6 18L18 6M6 6l12 12",
        _ => "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"
    };

    var headerColor = Model.Status switch
    {
        "Verified" => "from-green-500 to-emerald-600",
        "Half-Verified" => "from-blue-500 to-indigo-600",
        "Pending" => "from-yellow-500 to-orange-600",
        "Rejected" => "from-red-500 to-pink-600",
        _ => "from-gray-500 to-slate-600"
    };

    var progressPercentage = Model.Status switch
    {
        "Verified" => 100,
        "Half-Verified" => 80,
        "Pending" => 66,
        "Rejected" => 33,
        _ => 0
    };
}

<div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-6xl mx-auto">
        <!-- Header Section -->
        <div class="text-center mb-8">
            <div class="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r @headerColor rounded-full mb-4">
                <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="@statusIcon"></path>
                </svg>
            </div>
            <h1 class="text-4xl font-bold text-gray-900 mb-2">KYC Status</h1>
            <p class="text-gray-600 text-lg">Your verification status and details</p>
        </div>

        <!-- Progress Bar -->
        <div class="mb-8">
            <div class="flex items-center justify-between mb-2">
                <span class="text-sm font-medium text-gray-700">Verification Progress</span>
                <span class="text-sm font-medium text-gray-700">@progressPercentage%</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-3">
                <div class="bg-gradient-to-r @headerColor h-3 rounded-full transition-all duration-500 ease-out" style="width: @progressPercentage%"></div>
            </div>
            <div class="flex justify-between text-xs text-gray-500 mt-2">
                <span>Submitted</span>
                <span>Under Review</span>
                <span>Completed</span>
            </div>
        </div>

        <!-- Status Banner -->
        <div class="mb-8 p-6 border-2 @statusClass rounded-2xl shadow-lg">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <div class="flex-shrink-0">
                        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="@statusIcon"></path>
                        </svg>
                    </div>
                    <div>
                        <h2 class="text-2xl font-bold">
                            @switch (Model.Status)
                            {
                                case "Verified":
                                    <text>✅ Verification Complete</text>
                                    break;
                                case "Half-Verified":
                                    <text>🔄 Half Verified - Pending Final Approval</text>
                                    break;
                                case "Pending":
                                    <text>⏳ Under Review</text>
                                    break;
                                case "Rejected":
                                    <text>❌ Verification Rejected</text>
                                    break;
                                default:
                                    <text>📋 Status: @Model.Status</text>
                                    break;
                            }
                        </h2>
                        <p class="text-sm mt-1">
                            @switch (Model.Status)
                            {
                                case "Verified":
                                    <text>Your identity has been successfully verified. You now have full access to all features.</text>
                                    break;
                                case "Half-Verified":
                                    <text>Your documents passed automated verification. An admin will review and provide final approval shortly.</text>
                                    break;
                                case "Pending":
                                    <text>Your documents are being reviewed by our team. This usually takes 1-3 business days.</text>
                                    break;
                                case "Rejected":
                                    <text>Your verification was not approved. Please review the feedback and resubmit your documents.</text>
                                    break;
                                default:
                                    <text>Your KYC status is currently @Model.Status.ToLower().</text>
                                    break;
                            }
                        </p>
                    </div>
                </div>
                @if (Model.Status == "Rejected")
                {
                    <a href="@Url.Action("Resubmit")" class="bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg font-medium shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition duration-200">
                        Resubmit Documents
                    </a>
                }
            </div>
        </div>

        <div class="grid lg:grid-cols-2 gap-8">
            <!-- Status Details Card -->
            <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                <div class="bg-gradient-to-r @headerColor px-6 py-4">
                    <h3 class="text-xl font-bold text-white">Verification Details</h3>
                    <p class="text-white text-opacity-90 text-sm mt-1">Information about your KYC submission</p>
                </div>

                <div class="p-6 space-y-4">
                    <!-- Submission Date -->
                    <div class="flex items-center justify-between py-3 border-b border-gray-200">
                        <div class="flex items-center space-x-3">
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                            </svg>
                            <span class="font-medium text-gray-700">Submitted On</span>
                        </div>
                        <span class="text-gray-900 font-semibold">@Model.SubmittedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</span>
                    </div>

                    <!-- Current Status -->
                    <div class="flex items-center justify-between py-3 border-b border-gray-200">
                        <div class="flex items-center space-x-3">
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="font-medium text-gray-700">Current Status</span>
                        </div>
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium @statusClass">
                            @Model.Status
                        </span>
                    </div>

                    <!-- Processing Time -->
                    <div class="flex items-center justify-between py-3 border-b border-gray-200">
                        <div class="flex items-center space-x-3">
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="font-medium text-gray-700">Processing Time</span>
                        </div>
                        <span class="text-gray-900 font-semibold">
                            @{
                                var daysSinceSubmission = (DateTime.UtcNow - Model.SubmittedAt).Days;
                            }
                            @daysSinceSubmission day@(daysSinceSubmission != 1 ? "s" : "")
                        </span>
                    </div>

                    <!-- Extracted Information -->
                    @if (!string.IsNullOrEmpty(Model.ExtractedName) || !string.IsNullOrEmpty(Model.ExtractedCitizenshipNumber))
                    {
                        <div class="py-3 border-b border-gray-200">
                            <h4 class="font-medium text-gray-700 mb-3 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                                Extracted Information
                            </h4>
                            @if (!string.IsNullOrEmpty(Model.ExtractedName))
                            {
                                <div class="flex justify-between items-center mb-2">
                                    <span class="text-sm text-gray-600">Name:</span>
                                    <span class="text-sm font-medium text-gray-900">@Model.ExtractedName</span>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.ExtractedCitizenshipNumber))
                            {
                                <div class="flex justify-between items-center">
                                    <span class="text-sm text-gray-600">ID Number:</span>
                                    <span class="text-sm font-medium text-gray-900">@Model.ExtractedCitizenshipNumber</span>
                                </div>
                            }
                        </div>
                    }

                    <!-- OCR Verification Results -->
                    @if (Model.OcrProcessed)
                    {
                        <div class="py-3 border-b border-gray-200">
                            <h4 class="font-medium text-gray-700 mb-3 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                OCR Verification Results
                            </h4>
                            <div class="space-y-2 text-sm">
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">Name Verification:</span>
                                    <span class="@(Model.NameMatch ? "text-green-600 font-medium" : "text-red-600 font-medium")">
                                        @(Model.NameMatch ? "✅ Matched" : "❌ No Match")
                                    </span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-gray-600">ID Verification:</span>
                                    <span class="@(Model.IdMatch ? "text-green-600 font-medium" : "text-red-600 font-medium")">
                                        @(Model.IdMatch ? "✅ Matched" : "❌ No Match")
                                    </span>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.UserEnteredName))
                                {
                                    <div class="mt-3 pt-3 border-t border-gray-100">
                                        <div class="grid grid-cols-2 gap-4 text-xs">
                                            <div>
                                                <span class="text-gray-500">You entered:</span>
                                                <p class="font-medium">@Model.UserEnteredName</p>
                                                <p class="font-medium">@Model.UserEnteredId</p>
                                            </div>
                                            <div>
                                                <span class="text-gray-500">Document shows:</span>
                                                <p class="font-medium">@(!string.IsNullOrEmpty(Model.ExtractedName) ? Model.ExtractedName : "Not detected")</p>
                                                <p class="font-medium">@(!string.IsNullOrEmpty(Model.ExtractedCitizenshipNumber) ? Model.ExtractedCitizenshipNumber : "Not detected")</p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <!-- Admin Comment -->
                    @if (!string.IsNullOrEmpty(Model.AdminComment))
                    {
                        <div class="py-3">
                            <h4 class="font-medium text-gray-700 mb-2 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                                </svg>
                                Admin Feedback
                            </h4>
                            <div class="bg-gray-50 rounded-lg p-3">
                                <p class="text-sm text-gray-700">@Model.AdminComment</p>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Documents Preview Card -->
            <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                <div class="bg-gradient-to-r @headerColor px-6 py-4">
                    <h3 class="text-xl font-bold text-white">Submitted Documents</h3>
                    <p class="text-white text-opacity-90 text-sm mt-1">Your uploaded verification documents</p>
                </div>

                <div class="p-6 space-y-6">
                    <!-- ID Card Document -->
                    <div class="space-y-3">
                        <div class="flex items-center justify-between">
                            <h4 class="font-medium text-gray-700 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V4a2 2 0 114 0v2m-4 0a2 2 0 104 0m-4 0v2m4-2v2"></path>
                                </svg>
                                ID Document
                            </h4>
                            <button onclick="viewDocument('@Model.IdCardImagePath', 'ID Document')"
                                    class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                View Full Size
                            </button>
                        </div>
                        <div class="border-2 border-gray-200 rounded-lg overflow-hidden">
                            <img src="~/@Model.IdCardImagePath"
                                 alt="ID Document"
                                 class="w-full h-48 object-cover hover:scale-105 transition-transform duration-200 cursor-pointer"
                                 onclick="viewDocument('@Model.IdCardImagePath', 'ID Document')">
                        </div>
                    </div>

                    <!-- Face Image -->
                    <div class="space-y-3">
                        <div class="flex items-center justify-between">
                            <h4 class="font-medium text-gray-700 flex items-center">
                                <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                                Face Photo
                            </h4>
                            <button onclick="viewDocument('@Model.FaceImagePath', 'Face Photo')"
                                    class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                View Full Size
                            </button>
                        </div>
                        <div class="border-2 border-gray-200 rounded-lg overflow-hidden">
                            <img src="~/@Model.FaceImagePath"
                                 alt="Face Photo"
                                 class="w-full h-48 object-cover hover:scale-105 transition-transform duration-200 cursor-pointer"
                                 onclick="viewDocument('@Model.FaceImagePath', 'Face Photo')">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="mt-8 flex flex-wrap gap-4 justify-center">
            @if (Model.Status == "Verified")
            {
                <div class="bg-green-50 border border-green-200 rounded-lg p-4 text-center">
                    <svg class="w-8 h-8 text-green-600 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <p class="text-green-800 font-medium">You're all set! Your account is fully verified.</p>
                </div>
            }
            else if (Model.Status == "Pending")
            {
                <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 text-center">
                    <svg class="w-8 h-8 text-yellow-600 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <p class="text-yellow-800 font-medium">Please wait while we review your documents.</p>
                    <p class="text-yellow-700 text-sm mt-1">We'll notify you once the review is complete.</p>
                </div>
            }
            else if (Model.Status == "Half-Verified")
            {
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 text-center">
                    <svg class="w-8 h-8 text-blue-600 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6h4.5m-6.75 7.5h4.5"></path>
                    </svg>
                    <p class="text-blue-800 font-medium">Automated verification passed. A final review is pending.</p>
                    <p class="text-blue-700 text-sm mt-1">We'll notify you upon completion.</p>
                </div>
            }

            <a href="@Url.Action("Index", "Home")"
               class="bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg font-medium shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition duration-200">
                Back to Dashboard
            </a>
        </div>
    </div>
</div>

<!-- Document Viewer Modal -->
<div id="documentModal" class="fixed inset-0 bg-black bg-opacity-75 hidden z-50 flex items-center justify-center p-4">
    <div class="bg-white rounded-lg max-w-4xl max-h-full overflow-auto">
        <div class="flex items-center justify-between p-4 border-b">
            <h3 id="modalTitle" class="text-lg font-semibold text-gray-900"></h3>
            <button onclick="closeDocumentModal()" class="text-gray-500 hover:text-gray-700">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
        <div class="p-4">
            <img id="modalImage" src="/placeholder.svg" alt="" class="max-w-full h-auto">
        </div>
    </div>
</div>

<script>
    function viewDocument(imagePath, title) {
        document.getElementById('modalTitle').textContent = title;
        document.getElementById('modalImage').src = '@Url.Content("~/")' + imagePath;
        document.getElementById('documentModal').classList.remove('hidden');
    }

    function closeDocumentModal() {
        document.getElementById('documentModal').classList.add('hidden');
    }

    // Close modal when clicking outside
    document.getElementById('documentModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeDocumentModal();
        }
    });

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeDocumentModal();
        }
    });
</script>
